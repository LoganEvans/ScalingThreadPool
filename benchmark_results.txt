Running /home/logan/.cache/bazel/_bazel_logan/6176cb865b1bba52328466f6dd85a402/execroot/__main__/bazel-out/k8-opt/bin/queue_benchmark
Run on (12 X 4500 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x6)
  L1 Instruction 32 KiB (x6)
  L2 Unified 256 KiB (x6)
  L3 Unified 12288 KiB (x1)
Load Average: 4.18, 3.47, 2.23
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations
------------------------------------------------------------------------------------------------
BM_multi_producer_single_consumer<Queue<int*>>/1             126 ns          126 ns      5230000
BM_multi_producer_single_consumer<Queue<int*>>/2             737 ns          737 ns       910000
BM_multi_producer_single_consumer<Queue<int*>>/4             850 ns          847 ns       980000
BM_multi_producer_single_consumer<Queue<int*>>/8             964 ns          962 ns       560000
BM_multi_producer_single_consumer<Queue<int*>>/12           1547 ns         1348 ns      1000000
BM_multi_producer_single_consumer<Queue<int*>>/24           1520 ns          860 ns      1000000
BM_multi_producer_single_consumer_try<Queue<int*>>/1         152 ns          152 ns      4960000
BM_multi_producer_single_consumer_try<Queue<int*>>/2         180 ns          180 ns      4090000
BM_multi_producer_single_consumer_try<Queue<int*>>/4         202 ns          202 ns      3630000
BM_multi_producer_single_consumer_try<Queue<int*>>/8         629 ns          629 ns      2680000
BM_multi_producer_single_consumer_try<Queue<int*>>/12        469 ns          467 ns      1570000
BM_multi_producer_single_consumer_try<Queue<int*>>/24        783 ns          465 ns      1430000
BM_multi_producer_multi_consumer_try<Queue<int*>>/1          148 ns          148 ns      4780000
BM_multi_producer_multi_consumer_try<Queue<int*>>/2          197 ns          197 ns      3550000
BM_multi_producer_multi_consumer_try<Queue<int*>>/4          271 ns          271 ns      2820000
BM_multi_producer_multi_consumer_try<Queue<int*>>/6          279 ns          275 ns      2530000
BM_multi_producer_multi_consumer_try<Queue<int*>>/8          278 ns          148 ns      4560000
BM_multi_producer_multi_consumer_try<Queue<int*>>/12         303 ns          112 ns      6540000
BM_multi_producer_multi_consumer_try<Queue<int*>>/24         432 ns         92.9 ns      8210000
BM_multi_producer_multi_consumer<Queue<int*>>/1              144 ns          144 ns      4350000
BM_multi_producer_multi_consumer<Queue<int*>>/2              110 ns          110 ns      6180000
BM_multi_producer_multi_consumer<Queue<int*>>/4              197 ns          197 ns      2830000
BM_multi_producer_multi_consumer<Queue<int*>>/6              144 ns          138 ns      4510000
BM_multi_producer_multi_consumer<Queue<int*>>/8              150 ns         79.0 ns      8450000
BM_multi_producer_multi_consumer<Queue<int*>>/12             188 ns         73.4 ns      9870000
BM_multi_producer_multi_consumer<Queue<int*>>/24             183 ns         45.3 ns     15950000

