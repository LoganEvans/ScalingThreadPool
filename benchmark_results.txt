Running /home/logan/.cache/bazel/_bazel_logan/6176cb865b1bba52328466f6dd85a402/execroot/__main__/bazel-out/k8-opt/bin/queue_benchmark
Run on (12 X 4500 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x6)
  L1 Instruction 32 KiB (x6)
  L2 Unified 256 KiB (x6)
  L3 Unified 12288 KiB (x1)
Load Average: 0.90, 2.97, 2.50
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations
------------------------------------------------------------------------------------------------
BM_multi_producer_single_consumer<Queue<int*>>/1            77.7 ns         77.6 ns      7690000
BM_multi_producer_single_consumer<Queue<int*>>/2             720 ns          720 ns       930000
BM_multi_producer_single_consumer<Queue<int*>>/4             867 ns          864 ns      1000000
BM_multi_producer_single_consumer<Queue<int*>>/8            1118 ns         1077 ns       610000
BM_multi_producer_single_consumer<Queue<int*>>/12           1458 ns         1331 ns      1000000
BM_multi_producer_single_consumer<Queue<int*>>/24           1431 ns          635 ns      1000000
BM_multi_producer_single_consumer_try<Queue<int*>>/1         129 ns          129 ns      5260000
BM_multi_producer_single_consumer_try<Queue<int*>>/2         166 ns          166 ns      4360000
BM_multi_producer_single_consumer_try<Queue<int*>>/4         205 ns          205 ns      3700000
BM_multi_producer_single_consumer_try<Queue<int*>>/8         326 ns          326 ns      3160000
BM_multi_producer_single_consumer_try<Queue<int*>>/12        424 ns          421 ns      2160000
BM_multi_producer_single_consumer_try<Queue<int*>>/24        622 ns          278 ns      3310000
BM_multi_producer_multi_consumer_try<Queue<int*>>/1          142 ns          142 ns      4880000
BM_multi_producer_multi_consumer_try<Queue<int*>>/2          141 ns          141 ns      5450000
BM_multi_producer_multi_consumer_try<Queue<int*>>/4          137 ns          136 ns      4910000
BM_multi_producer_multi_consumer_try<Queue<int*>>/6          139 ns          139 ns      6090000
BM_multi_producer_multi_consumer_try<Queue<int*>>/8          167 ns         88.4 ns      8180000
BM_multi_producer_multi_consumer_try<Queue<int*>>/12         219 ns         80.3 ns      9010000
BM_multi_producer_multi_consumer_try<Queue<int*>>/24         331 ns         71.7 ns     12830000
BM_multi_producer_multi_consumer<Queue<int*>>/1              106 ns          106 ns      5940000
BM_multi_producer_multi_consumer<Queue<int*>>/2             98.8 ns         98.8 ns      6970000
BM_multi_producer_multi_consumer<Queue<int*>>/4             90.1 ns         90.1 ns      7910000
BM_multi_producer_multi_consumer<Queue<int*>>/6             74.5 ns         71.8 ns     10150000
BM_multi_producer_multi_consumer<Queue<int*>>/8              144 ns         77.2 ns      9280000
BM_multi_producer_multi_consumer<Queue<int*>>/12             180 ns         72.2 ns     10000000
BM_multi_producer_multi_consumer<Queue<int*>>/24             175 ns         42.3 ns     17620000

