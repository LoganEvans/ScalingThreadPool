Running /home/logan/.cache/bazel/_bazel_logan/6176cb865b1bba52328466f6dd85a402/execroot/__main__/bazel-out/k8-opt/bin/queue_benchmark
Run on (12 X 4500 MHz CPU s)
CPU Caches:
  L1 Data 32 KiB (x6)
  L1 Instruction 32 KiB (x6)
  L2 Unified 256 KiB (x6)
  L3 Unified 12288 KiB (x1)
Load Average: 8.44, 6.07, 4.00
***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.
------------------------------------------------------------------------------------------------
Benchmark                                                      Time             CPU   Iterations
------------------------------------------------------------------------------------------------
BM_multi_producer_single_consumer<Queue<int*>>/1            87.2 ns         87.2 ns      6930000
BM_multi_producer_single_consumer<Queue<int*>>/2             814 ns          813 ns       960000
BM_multi_producer_single_consumer<Queue<int*>>/4             886 ns          885 ns       970000
BM_multi_producer_single_consumer<Queue<int*>>/8            1135 ns         1104 ns       920000
BM_multi_producer_single_consumer<Queue<int*>>/12           1629 ns         1441 ns      1000000
BM_multi_producer_single_consumer<Queue<int*>>/24           1602 ns          821 ns      1000000
BM_multi_producer_single_consumer_try<Queue<int*>>/1         141 ns          141 ns      4970000
BM_multi_producer_single_consumer_try<Queue<int*>>/2         176 ns          175 ns      4200000
BM_multi_producer_single_consumer_try<Queue<int*>>/4         201 ns          201 ns      3640000
BM_multi_producer_single_consumer_try<Queue<int*>>/8         333 ns          330 ns      2090000
BM_multi_producer_single_consumer_try<Queue<int*>>/12        474 ns          445 ns      2050000
BM_multi_producer_single_consumer_try<Queue<int*>>/24        680 ns          271 ns      2470000
BM_multi_producer_multi_consumer_try<Queue<int*>>/1          152 ns          152 ns      4760000
BM_multi_producer_multi_consumer_try<Queue<int*>>/2          147 ns          147 ns      5060000
BM_multi_producer_multi_consumer_try<Queue<int*>>/4          129 ns          129 ns      5280000
BM_multi_producer_multi_consumer_try<Queue<int*>>/6          129 ns          126 ns      6230000
BM_multi_producer_multi_consumer_try<Queue<int*>>/8          173 ns         88.2 ns      8230000
BM_multi_producer_multi_consumer_try<Queue<int*>>/12         220 ns         80.4 ns      9010000
BM_multi_producer_multi_consumer_try<Queue<int*>>/24         320 ns         70.2 ns     10000000
BM_multi_producer_multi_consumer<Queue<int*>>/1              101 ns          101 ns      7080000
BM_multi_producer_multi_consumer<Queue<int*>>/2             95.0 ns         95.0 ns      7910000
BM_multi_producer_multi_consumer<Queue<int*>>/4             77.7 ns         77.3 ns      7290000
BM_multi_producer_multi_consumer<Queue<int*>>/6             71.1 ns         68.8 ns      8700000
BM_multi_producer_multi_consumer<Queue<int*>>/8              143 ns         75.8 ns      9050000
BM_multi_producer_multi_consumer<Queue<int*>>/12             177 ns         70.9 ns     10000000
BM_multi_producer_multi_consumer<Queue<int*>>/24             173 ns         42.7 ns     16700000

